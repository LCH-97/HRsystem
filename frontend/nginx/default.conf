##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# httpswww.nginx.comresourceswikistart
# httpswww.nginx.comresourceswikistarttopicstutorialsconfig_pitfalls
# httpswiki.debian.orgNginxDirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as drupal8.
#
# Please see usrsharedocnginx-docexamples for more detailed examples.
##

# Default server configuration
#
server {
<<<<<<< HEAD
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen []443 ssl default_server;
	#
	# Note You should disable gzip for SSL traffic.
	# See httpsbugs.debian.org773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See httpsbugs.debian.org765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippetssnakeoil.conf;

	root /usr/share/nginx/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name localhost;

	location / {
        alias   /usr/share/nginx/html/;
        try_files $uri $uri/ /index.html;
    }
	
	location /api {
                rewrite ^/api(.*)$ $1? break;
                proxy_pass http://backend-svc:8080;
                proxy_set_header Host $http_host;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Real-IP $remote_addr;
        }

	# pass PHP scripts to FastCGI server
	#
	#location ~ .php$ {
	#	include snippetsfastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets)
	#	fastcgi_pass unixrunphpphp7.4-fpm.sock;
	#	# With php-cgi (or other tcp sockets)
	#	fastcgi_pass 127.0.0.19000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ .ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available and symlink that
# to sites-enabled to enable it.
#
#server {
#	listen 80;
#	listen []80;
#
#	server_name example.com;
#
#	root varwwwexample.com;
#	index index.html;
#
#	location  {
#		try_files $uri $uri =404;
#	}
#}
=======
    listen       80;
    listen  [::]:80;
    server_name  localhost;
    #access_log  /var/log/nginx/host.access.log  main;
    location / {
        
        try_files $uri $uri/ @rewrites;
    }
    location @rewrites {
        rewrite ^(.+)$ /index.html last;
    }
    location /api {
        rewrite ^/api(.*)$ $1?$args break;
        proxy_pass http://192.168.0.53/api;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
    }
    #error_page  404              /404.html;
    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}
    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}
>>>>>>> 824d314e452b5a1c568737bbd941cc43ddbccdd3
