# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "backend/develop","backend/test/target","backend/test/init" ]
  pull_request:
    branches: [ "backend/develop","backend/test/target","backend/test/init" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: 
        actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: list file
      run: ls
    - name: cd backend
      run: cd ./backend
    - name: 현재 경로
      run: pwd
    - name: Run Tests
      run: |
        cd ./backend
        mvn test


    - name: Save Test Results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: .surefire/target/surefire-reports

    - name: Print Test Results
      uses: actions/github-script@v5
      with:
        script: |
          const fs = require('fs');
          const path = require('path');

          const resultsPath = path.join('.surefire', 'target', 'surefire-reports', 'TEST-*.xml');
          const results = fs.readdirSync(resultsPath);

          let success = true;
          for (const result of results) {
            const xml = fs.readFileSync(path.join(resultsPath, result), 'utf-8');
            if (xml.includes('<failure>')) {
              success = false;
              console.log(`Test ${result} failed!`);
            } else {
              console.log(`Test ${result} passed!`);
            }
          }

          if (!success) {
            throw new Error('Test failed!');
          }

