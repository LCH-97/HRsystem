pipeline {
    agent any
    stages {
        // 1. 깃 클론
        stage('git clone') {
            steps {
                git branch: 'main', url: 'https://github.com/jiieunn2/be02-fin-Hello_R_loha-HRsystem'
            }
        }

        // 2. 프로젝트에 필요한 패키지 설치
        stage('Install Dependencies') {
            steps {
                script {
                    dir('frontend') {
                        sh 'npm install'
                    }
                }
            }
        }

        // 3. 기존에 생성되어 있는 dist 폴더 삭제
        stage('Delete Exist file') {
            steps {
                script {
                    sh 'rm -rf frontend/dist'
                }
            }
        }

        // 4. 새로운 프로젝트 빌드
        stage('Build') {
            steps {
                script {
                    dir('frontend') {
                        sh 'npm run build'
                    }
                }
            }
        }

        // 5. Docker 빌드
        stage('Docker Build') {
            steps {
                script {
                    dir('frontend') {
                        sh 'docker build --tag kje12/hrf:1.$BUILD_NUMBER -f Dockerfile .'
                    }
                }
            }
             post {
                // Docker 빌드 성공 시 슬랙 채널 ( #알림 ) 으로 성공 알림 발송
                success {
                    slackSend(
                        channel: '#알림',
                        color: 'good',
                        message: "Docker image kje12/hrf:1.${BUILD_NUMBER} build success.",
                        // 자기 슬랙 누르면 '어쩌구.slack.com' 나옴
                        teamDomain: '어쩌구',
                        // Jenkins에서 Dashboard > Manage Jenkins > Credentials에서 슬랙정보 넣은 ID
                        tokenCredentialId: '땡땡땡-땡땡땡-땡땡땡'
                }
                // Docker 빌드 실패 시 슬랙 채널 ( #알림 ) 으로 실패 알림 발송
                failure {
                    slackSend(
                        channel: '#알림',
                        color: 'danger',
                        message: "Docker image kje12/hrf:1.${BUILD_NUMBER} build failed.",
                        // 자기 슬랙 누르면 '어쩌구.slack.com' 나옴
                        teamDomain: '어쩌구',
                        // Jenkins에서 Dashboard > Manage Jenkins > Credentials에서 슬랙정보 넣은 ID
                        tokenCredentialId: '땡땡땡-땡땡땡-땡땡땡'
                }
            }
        }

        // 6. Docker Push
        stage('Docker Push') {
            steps {
                script {
                    // Docker 로그인
                    withCredentials([usernamePassword(credentialsId: 'realFinal', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    }
                    // Docker Push
                    sh 'docker push kje12/hrf:1.$BUILD_NUMBER'
                }
            }
            post {
                // Docker Push 성공 시 슬랙 채널 ( #알림 ) 으로 성공 알림 발송
                success {
                    slackSend(
                        channel: '#알림',
                        color: 'good',
                        message: "Docker image kje12/hrf:1.${BUILD_NUMBER} push success.",
                        // 자기 슬랙 누르면 '어쩌구.slack.com' 나옴
                        teamDomain: '어쩌구',
                        // Jenkins에서 Dashboard > Manage Jenkins > Credentials에서 슬랙정보 넣은 ID
                        tokenCredentialId: '땡땡땡-땡땡땡-땡땡땡'
                }
                // Docker Push 실패 시 슬랙 채널 ( #알림 ) 으로 실패 알림 발송
                failure {
                    slackSend(
                        channel: '#알림',
                        color: 'danger',
                        message: "Docker image kje12/hrf:1.${BUILD_NUMBER} push failed.",
                        // 자기 슬랙 누르면 '어쩌구.slack.com' 나옴
                        teamDomain: '어쩌구',
                        // Jenkins에서 Dashboard > Manage Jenkins > Credentials에서 슬랙정보 넣은 ID
                        tokenCredentialId: '땡땡땡-땡땡땡-땡땡땡'
                }
            }
        }

        // 7. SSH 전송
        stage('SSH transfer') {
            steps {
                script {
                    sshPublisher(
                        continueOnError: false,
                        failOnError: true,
                        publishers: [
                            sshPublisherDesc(
                                configName: "fianl",
                                verbose: true,
                                transfers: [
                                    sshTransfer(
                                        sourceFiles: "frontend/frontend-deployment.yaml",
                                        remoteDirectory: "/root/",
                                        execCommand: '''
                                        sed -i "s/VERSION/$BUILD_NUMBER/g" /root/frontend/frontend-deployment.yaml
                                        kubectl apply -f /root/frontend/frontend-deployment.yaml
                                        '''
                                    )
                                ]
                            )
                        ]
                    )
                }
            }
        }

        // 8. 슬랙 알림
        stage('Slack Notification') {
            steps {
                script {
                    slackSend(
                        channel: '#알림',
                        color: 'good',
                        message: "Build version : kje12/hrf:1.${BUILD_NUMBER} is finally successful!",
                        // 자기 슬랙 누르면 '어쩌구.slack.com' 나옴
                        teamDomain: '어쩌구',
                        // Jenkins에서 Dashboard > Manage Jenkins > Credentials에서 슬랙정보 넣은 ID
                        tokenCredentialId: '땡땡땡-땡땡땡-땡땡땡'
                    )
                }
            }
        }
    }
}